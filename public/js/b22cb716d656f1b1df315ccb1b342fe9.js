var SR=(function(module,$){'use strict';var Validator=function(options){this.$form=$(options.form);this.status=[];this.config=options.config||[];if(options.auto){this.enable();}};Validator.prototype.enable=function(){this.$form.on('submit.sr_validator',$.proxy(this,'validateForm'));};Validator.prototype.disable=function(){this.$form.off('submit.sr_validator');};Validator.prototype.validates=function(){var validates=true,l=this.config.length,i=0,result,field,desc,descCustom,trackData;this.status=[];for(;i<l;i++){field=this.config[i].field;desc=this.config[i].desc||field;result=this.validateField(field);validates&=result.validates;if(result.validates){continue;}
if($.type(desc)==='function'){desc=desc.call(field,field.val());}
if($.type(desc)==='object'){for(var item in desc){if(desc.hasOwnProperty(item)&&item==='0'&&typeof desc[item]==='object'){if(desc[item].hasOwnProperty('tagName')&&desc[item].hasOwnProperty('name')){descCustom=desc[item].tagName.toLowerCase()+' field '+desc[item].name;}}}}
trackData={category:'Form error',action:this.$form.attr('name')?this.$form.attr('name')+':'+(descCustom?descCustom:desc):this.$form.attr('class')+':'+(descCustom?descCustom:desc),label:result.message};SR.tracking.trackEvent(trackData.category,trackData.action,trackData.label);this.status.push({field:field,message:result.message});}
return!!validates;};Validator.prototype.validateForm=function(){var validates=this.validates(),l=this.status.length,i=0,input;this.$form.find('.validate_box').removeClass("validate_box");this.$form.find('.form_validation').remove();for(;i<l;i++){this.showMessage(this.status[i].field,this.status[i].message);}
if(!validates){this._doubleCheck();$(this.status[0].field)
.filter(':first')
.focus();}
return validates;};Validator.prototype.validateField=function(field){var result={validates:true},$input=$(field),value=$input.val()||'',config=this.getFieldConfig(field),l=config.length,i=0,message,rule;for(;i<l;i++){rule=config[i].rule;message=config[i].message;if($.type(message)==='undefined')
message=this.messages[rule];if($.type(message)==='function')
message=message.call($input,value);if($.type(rule)==='string')
rule=this.rules[rule];if($.type(rule)!=='function')
throw'Rule required';if(!rule.call($input,value)){result.validates=false;result.message=message;break;}}
return result;};Validator.prototype.getFieldConfig=function(field){var i,match=false;for(i in this.config){if($(this.config[i].field).get(0)===$(field).get(0)){match=true;break;}}
if(!match){this.config.push({field:field,config:[]});i=this.config.length-1;}
return this.config[i].config;};Validator.prototype.addRule=function(field,rule,message){this.getFieldConfig(field).push({rule:rule,message:message});};Validator.prototype.showMessage=function(field,message){$(field).filter(':first')
.parent()
.parent()
.parent()
.addClass('validate_box');$(field)
.filter(':first')
.parent()
.before($('<span/>',{'class':'form_validation','text':message}));};Validator.prototype.reset=function(){this.status=[];this.config=[];return this;};Validator.prototype._doubleCheck=function(){var me=this;if(this._submitted){alert("There are one or more errors on the form.\n"
+'Please check and try again.');setTimeout(function(){me._submitted=false;},2000);}else{this._submitted=true;}};Validator.prototype.rules={required:function(str){return!!str;},email:function(str){return(/^.+@.+\..+$/).test(str);},password:function(str){return(str.length>=4);},date:function(str){return(/^\d{2}\/\d{2}\/\d{4}$/).test(str);},postcodeFirstHalf:function(str){return(/^(\w{1,2}\d{1,2})$/).test(str);},postcode:function(str){return(/^(\w{1,2}\d{1,2})(\w?\s?\d\w{2})$/).test(str);},zipcode:function(str){return(/^(\d{5})(-\d{4})?$/).test(str);}};Validator.prototype.messages={required:function(str){return'This field is required';},email:function(str){return'A valid e-mail address is required';},password:function(str){return'Passwords must be at least 4 characters long';},date:function(str){return'Please enter a date in the format '+SR.l('date_format');},postcodeFirstHalf:function(str){return'Please enter the first half of your postcode';},postcode:function(str){return'Please enter a valid UK postcode';},zipcode:function(str){return'Please enter a valid zipcode';}};module.Validator=Validator;return module;}(SR||{},jQuery));
SR.listing=(function(module,$){'use strict';var step1=(function(){var e={},validator,init=function(){e.$form=$('.pl_step1');e.$lookingFor=e.$form.find('.form_row_looking_for select');setUpValidation();},addEvents=function(){e.$seekers.change(lookingFor.narrow);},selectedGender=function(){var gender=$('input[name=NumberAndSexOfSeekers]:checked:not([disabled])')[0];return gender||false;},setUpValidation=function(){var config=[{field:'.form_row_whos_searching select',desc:'Single or couple searching',config:[{rule:function(){if(selectedGender()&&e.$lookingFor.val()!="nothing"||$(this).val()!="nothing"){return true;}
return false;},message:'Please describe who is searching'+
' - e.g. Just you, You and a friend'}]},{field:'.form_row_seekers input[name=NumberAndSexOfSeekers]',desc:'Gender(s) selector',config:[{rule:function(){if(selectedGender()){return true;}
return false;},message:'Please describe your gender(s)'}]},{field:'.form_row_looking_for input[name=RoomReq]',desc:'Rooms required',config:[{rule:function(){if($('input[name=RoomReq]:checked')[0]||$('#roomReqHidden').not(':disabled').val()){return true;}
return false;},message:"Please select your room requirements"}]},];validator=new SR.Validator({form:e.$form,auto:true,config:config});},lookingFor=(function(){var seekers={single:['a single or double room','a double room'],mixed:['a double room (we are partners)','2 rooms'],same:['2 rooms','a twin room or 2 rooms','a double room (we are partners)']},insertOption=function(i,value){e.$lookingFor.append($('<option/>',{value:value,text:value}));},narrow=function(){e.$lookingFor.children().each(function(){$(this).prop('disabled',true).hide();});var code=$(this).children(':selected').val(),type=(code.length===1)?'single':((/(?=.*M)(?=.*F)/).test(code))?'mixed':'same';var items=seekers[type].length;for(var i=0;i<items;i++){e.$lookingFor.children().each(function(){if($(this).val()==seekers[type][i]){$(this).prop('disabled',false).show();}});e.$lookingFor.prop('selectedIndex',0);}};return{seekers:seekers,narrow:narrow};}());return{init:init};}()),step2=(function(){var e={},validator,init=function(){e.$form=$('.pl_step2');e.$lookingFor=e.$form.find('.form_row_looking_for select');e.$glButton=e.$form.find('button[name=watch_select], input[name=watch_select]');e.$glSelect=e.$form.find('.form_row_watchlist :input');e.$occupation=e.$form.find('select[name=share_type]');e.$campusRow=e.$form.find('.form_row_campus');e.$regForm=e.$form.find('.pl_login_reg_new');e.$loginForm=e.$form.find('.pl_login_reg_existing');e.$regEmail=e.$regForm.find('input[name=email]');e.$regPassword=e.$regForm.find('input[name=password]');e.$regPasswordAgain=e.$regForm.find('input[name=password_again]');e.$loginEmail=e.$loginForm.find('input[name=login_email]');setUpValidation();addEvents();e.$occupation.trigger('change');},addEvents=function(){e.$glButton.click($.proxy(validator,'disable'));e.$glSelect.change(submitToWatchlist);e.$occupation.change(toggleCampus);},submitToWatchlist=function(){e.$glButton.trigger('click');return false;},toggleCampus=function(){e.$campusRow.toggle($(this).val()==='S');},fillingNewUserForm=function(){if(!e.$regEmail.val()&&!e.$loginEmail.val())
{return false;}
if(e.$loginEmail.val())
{return false;}
return true;},setUpValidation=function(){var config=[{field:'.form_row_whos_searching select',desc:'Single or couple searching',config:[{rule:function(){if($('.form_row_seekers input[name=NumberAndSexOfSeekers]:checked:not([disabled])')[0]&&e.$lookingFor.val()!="nothing"||$(this).val()!="nothing"){return true;}
return false;},message:'Please describe who is searching'+
' - e.g. Just you, You and a friend'}]},{field:'.form_row_seekers input[name=NumberAndSexOfSeekers]',desc:'Gender(s) selector',config:[{rule:function(){if($('.form_row_seekers input[name=NumberAndSexOfSeekers]:checked:not([disabled])')[0]){return true;}
return false;},message:'Please describe your gender(s)'}]},{field:'.form_row_looking_for select',desc:'Rooms required',config:[{rule:function(){if($(this).val()!="nothing"||$('#roomReqHidden').not(':disabled').val()){return true;}
return false;},message:"Please select your room requirements"}]},{field:e.$glSelect,desc:'Area selector',config:[{rule:'required',message:'Please choose where you would like to live'}]},{field:'.form_row_budget input',desc:'Budget amount',config:[{rule:'required',message:'Please enter your budget'}]},{field:'.form_row_budget select',desc:'Budget pw/pcm',config:[{rule:'required',message:'Please select whether your budget is per week or per month'}]},{field:'.form_row_name input[name=first_name]',desc:'First name',config:[{rule:'required',message:'Please enter your first name'}]},{field:'.form_row_period select[name=min_term]',desc:'Term (min can\'t be greater than max',config:[{rule:function(){var minval=parseInt($(this).val());var maxval=parseInt($('.form_row_period select[name=max_term]').val());if(maxval===0){return true;}
return(minval<=maxval);},message:'Minimum term can\'t be greater than the maximum term'}]}];if($(".form_input select[name=max_age]").length){config.push({field:'.form_input select[name=min_age]',desc:'About us - min / max ages',config:[{rule:function(){if($(this).val().length>0&&$(".form_input select[name=max_age]").val().length>0)
{return true;}
return false;},message:'Please select your ages'}]});}else{config.push({field:'.form_input select[name=min_age]',desc:'About me - age',config:[{rule:function(){if($(this).val().length>0)
{return true;}
return false;},message:'Please select your age'}]});}
if(!SR.user.id){config.push({field:'.form_row_email input[name=email]',desc:'New / Existing user',config:[{rule:function(){return(e.$regEmail.val()||e.$loginEmail.val());},message:"If you are a new user, fill in the details below, otherwise if you are an existing user please fill in the details under 'Existing user?'"}]});config.push({field:'.form_row_password input[name=password]',desc:'New user password',config:[{rule:function(){if(!fillingNewUserForm()){return true;}
return(e.$regEmail.val()&&!e.$loginEmail.val()&&e.$regPassword.val());},message:"Please choose a password"}]});config.push({field:e.$regPasswordAgain,desc:function(){if(!e.$regPasswordAgain.val()){return"New user confirm password missing";}else{return"New user confirm password mismatch";}},config:[{rule:function(){if(!fillingNewUserForm()){return true;}
return(e.$regEmail.val()&&!e.$loginEmail.val()&&e.$regPasswordAgain.val()&&e.$regPasswordAgain.val()==e.$regPassword.val());},message:function(){if(!e.$regPasswordAgain.val()){return"Please confirm your password";}else{return"The passwords you entered do not match";}}}]});}
validator=new SR.Validator({form:e.$form,auto:true,config:config});};return{init:init};}());module.placeWanted={step1:step1,step2:step2};return module;}(SR.listing||{},jQuery));
